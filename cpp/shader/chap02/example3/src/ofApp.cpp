#include "ofApp.h"

//--------------------------------------------------------------
void ofApp::setup(){
	/////////////////////////////////////////////////////////////////////////////////
	// Version 2 : 使用归一化的设备坐标系，来指定 三角形 的顶点位置 
	//    那么，如果区分 屏幕的绝对坐标 与 归一化的设备坐标系呢？
	// 很简单，如果所有的点的坐标的取值范围都在 [ -1.0 , +1.0 ] 之间，那么使用的就是 归一化的设备坐标系
	//   否则，使用的就是 屏幕绝对坐标，  
	// 原因在于 -1.0 ~ +1.0 之间的跨度只有2个像素 ，水平方向/竖直方向只有2个像索的窗口, 给谁看？
	m_triangle.addVertex( glm::vec3(-1.0,  1.0, 0.0) );		 // vertex 0
	m_triangle.addVertex( glm::vec3(-1.0, -1.0f, 0.0) );     // vertex 1
	m_triangle.addVertex( glm::vec3( 1.0, -1.0f, 0.0) );     // vertex 2

	m_shader.load("first_vertex.vert" , "first_fragment.frag");
}

//--------------------------------------------------------------
void ofApp::update(){

}

//--------------------------------------------------------------
void ofApp::draw(){
	m_shader.begin();
	m_triangle.draw();
	m_shader.end();
}

//--------------------------------------------------------------
void ofApp::keyPressed(int key){

}

//--------------------------------------------------------------
void ofApp::keyReleased(int key){

}

//--------------------------------------------------------------
void ofApp::mouseMoved(int x, int y ){

}

//--------------------------------------------------------------
void ofApp::mouseDragged(int x, int y, int button){

}

//--------------------------------------------------------------
void ofApp::mousePressed(int x, int y, int button){

}

//--------------------------------------------------------------
void ofApp::mouseReleased(int x, int y, int button){

}

//--------------------------------------------------------------
void ofApp::mouseEntered(int x, int y){

}

//--------------------------------------------------------------
void ofApp::mouseExited(int x, int y){

}

//--------------------------------------------------------------
void ofApp::windowResized(int w, int h){

}

//--------------------------------------------------------------
void ofApp::gotMessage(ofMessage msg){

}

//--------------------------------------------------------------
void ofApp::dragEvent(ofDragInfo dragInfo){ 

}