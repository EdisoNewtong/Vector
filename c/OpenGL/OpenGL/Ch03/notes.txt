--------------------------------------------------
Ch03 使用OpenGL 在窗口内绘制各种颜色的线段
--------------------------------------------------

Notes:

// 设置OpenGL 窗口的背景色 r/g/b/a : [0.0 , 1.0]
glClearColor(r,g,b,alpha); // 不会立即生效

// 需要调用如下 API 才能生效
glClear( GL_COLOR_BUFFER_BIT);

// 设置要绘制的图元的颜色(目前设置为红色) r/g/b : [0.0 , 1.0]
glColor3f(1.0,0.0,0.0);

// GLUT_SINGLE 常量
GLUT_SINGLE : a single refresh buffer is to be used for the display window

// x:50, y:100 ，这个坐标系是屏幕坐标系，以屏幕左上角为屏幕坐标系的原点，向右为+X, 向下为+Y
glInitWindowPosition(50,100);

glInitWindowSize(400,300);

glMatrixMode( GL_PROJECTION );
// 设置垂直/正交的投影区域 x:[1.0,100.0] , y:[2.0,200.0]
// 也就是说，视口的区域为是在这个范围内，所以坐标点在这个区域以外的点，都不被显示出来
//**************************************************
// 另外, 视口的区域范围与窗口的大小[没有]直接关系!!!
// 即窗口大小为50*100, 
// 一个点的坐标为(60,150); 虽然看似这个点已经超出了窗口的长宽范围
// 但是 : 这个点却落在了 x:[1.0,100.0] , y:[2.0,200.0] 范围之内，依然能显示在屏幕的窗口之内
// 因此，图元的坐标位置与尺寸大小，只与 视口的范围[有关]，与OpenGL的窗口大小[无关]
//**************************************************
gluOrtho2D(1.0, 100.0, 2.0, 200.0);


// 绘制1条从窗口左下角点，45度指向窗口右上角的[红色]线段，线段长度 10*sqrt(2)
glColor3f(1.0,0.0,0.0);
glBegin(GL_LINES);
	glVertex2i(0,0);
	glVertex2i(10,10);
glEnd();

// 绘制多和条线段的话, 每2个顶点为1组
// 可以在绘制之前，设置每1组，2个顶点构成的线段的颜色
glBegin(GL_LINES);
	// line 1 : Red
	glColor3f(1.0,0.0,0.0);
	glVertex2i(0,0);
	glVertex2i(10,10);
	// line 2 : Green ,  竖直向上的线段
	glColor3f(0.0,1.0,0.0);
	glVertex2i(10,10);
	glVertex2i(10,50);
	// line 3 : Blue  水平向右
	glColor3f(0.0,0.0,1.0);
	glVertex2i(10,50);
	glVertex2i(40,50);
glEnd();


glFlush();	// 强制OpenGL ，刷新刚刚传入的绘制图元，使这些要绘制的图元尽快生效



// 这个API一定最先调用，初始化openGL
glutInit(&argc,argv);
// 这个API一定要放在最后调用
glutMainLoop();
