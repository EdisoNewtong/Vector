----------------------------------------------------------------------------------------------------
========== in in static-2D-ArraySample ( 3  *  5 )  ==========
staticAry2D = {
  {  1,  2,  3,  4,  5 }, 
  {  6,  7,  8,  9, 10 }, 
  { 11, 12, 13, 14, 15 } 
};
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Sample code for pointing to an 1-D <Static-Fixed> array : ...
ary2D[1]  ->  {  6,  7,  8,  9, 10 };
 
========== in dynamic-2D-ArraySample ( 3  *  5 )  ==========
Alloc a 2-D Array ......
dynamic2DArray = {
  {  1,  2,  3,  4,  5 },
  {  6,  7,  8,  9, 10 },
  { 11, 12, 13, 14, 15 } 
};
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Sample code for pointing to an 1-D <Dynamic-Alloced> array : ...
ary2D[1]  ->  {  6,  7,  8,  9, 10 };

Release a 2-D Array ......



----------------------------------------------------------------------------------------------------

========== in in static-3D-ArraySample ( 3  *  5  *  7 )  ==========
staticAry3D = {
  {
    {  1,   2,   3,   4,   5,   6,   7  }, 
    {  8,   9,  10,  11,  12,  13,  14  }, 
    { 15,  16,  17,  18,  19,  20,  21  }, 
    { 22,  23,  24,  25,  26,  27,  28  }, 
    { 29,  30,  31,  32,  33,  34,  35  }
  }, 
  {
    { 36,  37,  38,  39,  40,  41,  42  }, 
    { 43,  44,  45,  46,  47,  48,  49  }, 
    { 50,  51,  52,  53,  54,  55,  56  }, 
    { 57,  58,  59,  60,  61,  62,  63  }, 
    { 64,  65,  66,  67,  68,  69,  70  }
  }, 
  {
    { 71,  72,  73,  74,  75,  76,  77  }, 
    { 78,  79,  80,  81,  82,  83,  84  }, 
    { 85,  86,  87,  88,  89,  90,  91  }, 
    { 92,  93,  94,  95,  96,  97,  98  }, 
    { 99, 100, 101, 102, 103, 104, 105  }
  }
};
---------- | Study Case of 3D Array address |----------
 ary3D    = 0x7ffcc4056f40
&ary3D    = 0x7ffcc4056f40
&ary3D[0] = 0x7ffcc4056f40
in if, ary == ary3D == &ary3D[0] . 

   ary3D[0]    = 0x7ffcc4056f40
  &ary3D[0][0] = 0x7ffcc4056f40
  &ary3D[0]    = 0x7ffcc4056f40

   ary3D[1]    = 0x7ffcc4056fcc
  &ary3D[1][0] = 0x7ffcc4056fcc
  &ary3D[1]    = 0x7ffcc4056fcc

   ary3D[2]    = 0x7ffcc4057058
  &ary3D[2][0] = 0x7ffcc4057058
  &ary3D[2]    = 0x7ffcc4057058


     ary3D[0][0]    = 0x7ffcc4056f40
    &ary3D[0][0][0] = 0x7ffcc4056f40
    &ary3D[0][0]    = 0x7ffcc4056f40

     ary3D[0][1]    = 0x7ffcc4056f5c
    &ary3D[0][1][0] = 0x7ffcc4056f5c
    &ary3D[0][1]    = 0x7ffcc4056f5c

     ary3D[0][2]    = 0x7ffcc4056f78
    &ary3D[0][2][0] = 0x7ffcc4056f78
    &ary3D[0][2]    = 0x7ffcc4056f78

     ary3D[0][3]    = 0x7ffcc4056f94
    &ary3D[0][3][0] = 0x7ffcc4056f94
    &ary3D[0][3]    = 0x7ffcc4056f94

     ary3D[0][4]    = 0x7ffcc4056fb0
    &ary3D[0][4][0] = 0x7ffcc4056fb0
    &ary3D[0][4]    = 0x7ffcc4056fb0


     ary3D[1][0]    = 0x7ffcc4056fcc
    &ary3D[1][0][0] = 0x7ffcc4056fcc
    &ary3D[1][0]    = 0x7ffcc4056fcc

     ary3D[1][1]    = 0x7ffcc4056fe8
    &ary3D[1][1][0] = 0x7ffcc4056fe8
    &ary3D[1][1]    = 0x7ffcc4056fe8

     ary3D[1][2]    = 0x7ffcc4057004
    &ary3D[1][2][0] = 0x7ffcc4057004
    &ary3D[1][2]    = 0x7ffcc4057004

     ary3D[1][3]    = 0x7ffcc4057020
    &ary3D[1][3][0] = 0x7ffcc4057020
    &ary3D[1][3]    = 0x7ffcc4057020

     ary3D[1][4]    = 0x7ffcc405703c
    &ary3D[1][4][0] = 0x7ffcc405703c
    &ary3D[1][4]    = 0x7ffcc405703c


     ary3D[2][0]    = 0x7ffcc4057058
    &ary3D[2][0][0] = 0x7ffcc4057058
    &ary3D[2][0]    = 0x7ffcc4057058

     ary3D[2][1]    = 0x7ffcc4057074
    &ary3D[2][1][0] = 0x7ffcc4057074
    &ary3D[2][1]    = 0x7ffcc4057074

     ary3D[2][2]    = 0x7ffcc4057090
    &ary3D[2][2][0] = 0x7ffcc4057090
    &ary3D[2][2]    = 0x7ffcc4057090

     ary3D[2][3]    = 0x7ffcc40570ac
    &ary3D[2][3][0] = 0x7ffcc40570ac
    &ary3D[2][3]    = 0x7ffcc40570ac

     ary3D[2][4]    = 0x7ffcc40570c8
    &ary3D[2][4][0] = 0x7ffcc40570c8
    &ary3D[2][4]    = 0x7ffcc40570c8


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Sample code for pointing to a 2-D <Static-Fixed> array : ...
ary3D[1]  ->  
{
  { 36,  37,  38,  39,  40,  41,  42 }, 
  { 43,  44,  45,  46,  47,  48,  49 }, 
  { 50,  51,  52,  53,  54,  55,  56 }, 
  { 57,  58,  59,  60,  61,  62,  63 }, 
  { 64,  65,  66,  67,  68,  69,  70 }
};
 
========== in in dynamic-3D-ArraySample ( 3  *  5  *  7 )  ==========
Alloc a 3-D Array ......
dynamic3DArray = {
  {
    {  1,   2,   3,   4,   5,   6,   7  },
    {  8,   9,  10,  11,  12,  13,  14  },
    { 15,  16,  17,  18,  19,  20,  21  },
    { 22,  23,  24,  25,  26,  27,  28  },
    { 29,  30,  31,  32,  33,  34,  35  }
  },
  {
    { 36,  37,  38,  39,  40,  41,  42  },
    { 43,  44,  45,  46,  47,  48,  49  },
    { 50,  51,  52,  53,  54,  55,  56  },
    { 57,  58,  59,  60,  61,  62,  63  },
    { 64,  65,  66,  67,  68,  69,  70  }
  },
  {
    { 71,  72,  73,  74,  75,  76,  77  },
    { 78,  79,  80,  81,  82,  83,  84  },
    { 85,  86,  87,  88,  89,  90,  91  },
    { 92,  93,  94,  95,  96,  97,  98  },
    { 99, 100, 101, 102, 103, 104, 105  }
  }
};
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Sample code for pointing to a 2-D <Dynamic-Alloced> array : ...
ary3D[1]  ->  
{
  { 36,  37,  38,  39,  40,  41,  42 }, 
  { 43,  44,  45,  46,  47,  48,  49 }, 
  { 50,  51,  52,  53,  54,  55,  56 }, 
  { 57,  58,  59,  60,  61,  62,  63 }, 
  { 64,  65,  66,  67,  68,  69,  70 }
};

 Release a 3-D Array ......



----------------------------------------------------------------------------------------------------
